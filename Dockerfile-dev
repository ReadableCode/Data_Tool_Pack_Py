# Start with Ubuntu 22.04 LTS as the base image
FROM ubuntu:22.04

# Avoid prompts from apt
ENV DEBIAN_FRONTEND=noninteractive

# Install Python, pip, and OpenVPN (2.x series is available from the default repositories)
RUN apt-get update && \
    apt-get install -y python3.10 python3-pip openvpn && \
    python3.10 -m pip install --upgrade pip

# Install necessary utilities and add the OpenVPN 3 repository
RUN apt-get update && \
    apt-get install -y software-properties-common curl gnupg2 && \
    echo "deb [signed-by=/usr/share/keyrings/openvpn3-archive-keyring.gpg] https://swupdate.openvpn.net/community/openvpn3/repos jammy main" | tee /etc/apt/sources.list.d/openvpn3.list && \
    curl -fsSL https://swupdate.openvpn.net/repos/openvpn-repo-pkg-key.pub | gpg --dearmor -o /usr/share/keyrings/openvpn3-archive-keyring.gpg && \
    apt-get update && \
    apt-get install -y openvpn3

# Keeps Python from generating .pyc files in the container
ENV PYTHONDONTWRITEBYTECODE=1

# Turns off buffering for easier container logging
ENV PYTHONUNBUFFERED=1

# Create an alias for 'll' as 'ls -al'
RUN echo 'alias ll="ls -al"' >> /root/.bashrc && echo 'alias ll="ls -al"' > /root/.bash_aliases

# Install pip requirements
ADD requirements.txt .
RUN python3 -m pip install --ignore-installed -r requirements.txt

# Set the working directory in the container and copy the current directory contents to the container
WORKDIR /na-finops
COPY . /na-finops

# Copy the OpenVPN 3 configuration files, the same files should also work for OpenVPN 2
COPY hellofresh.ovpn /root/hellofresh.ovpn
COPY vpnauth.conf /root/vpnauth.conf

# Start D-Bus and OpenVPN 3 via an entrypoint-dev script
COPY entrypoint-dev.sh /entrypoint-dev.sh
RUN chmod +x /entrypoint-dev.sh
ENTRYPOINT ["/entrypoint-dev.sh"]

CMD ["python3"]
